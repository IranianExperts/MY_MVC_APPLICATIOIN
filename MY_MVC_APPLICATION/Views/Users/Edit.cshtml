@model Models.User

@{
	string strTitle = "Edit User";

	ViewBag.Title = strTitle;
}

<h2>
	@strTitle
</h2>

<hr />

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.Id)

	<div class="form-horizontal">

		@Html.ValidationSummary(excludePropertyErrors: true, message: "Please fix the below errors before continuing:", htmlAttributes: new { @class = "text-danger" })

		<div class="form-group">
			@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-sm-3" })
			<div class="col-sm-9">
				<div class="checkbox">
					@Html.EditorFor(model => model.IsActive)
					@Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-sm-3" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-sm-3" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-3" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-sm-3" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@*@Html.LabelFor(model => model.RoleId, "RoleId", htmlAttributes: new { @class = "control-label col-sm-3" })*@
			@Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-sm-3" })
			<div class="col-sm-9">
				@*@Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })*@
				@Html.DropDownList(name: "RoleId", selectList: null, optionLabel: "Select an item...", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-sm-3" })
			<div class="col-sm-9">
				@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-sm-offset-3 col-sm-9">
				<button type="submit" class="btn btn-primary" accesskey="S">(S)ave</button>
				<button type="reset" class="btn btn-default" accesskey="R">(R)eset</button>
			</div>
		</div>

	</div>
}

<div class="row">
	<div class="col-xs-12">
		@Html.ActionLink("Details", MVC.Users.Details(Model.Id))
		|
		@Html.ActionLink("Delete", MVC.Users.Delete(Model.Id))
		|
		@Html.ActionLink("Back to List", MVC.Users.Index())
	</div>
</div>
